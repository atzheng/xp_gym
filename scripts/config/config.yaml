run:
  output_path: "output/test_out.csv"
  n_envs: 100
  n_steps: 500000
  estimate_every_n_steps: 1000
  seed: 42

# Configuration for ATE computation, used by compute-ate.py
ate:
  output_path: "output/ate.csv"
  k: 100  # Total number of trials
  batch_size: 100  # Number of environments to run in parallel
  n_steps: ${run.n_steps} # Number of events to simulate per trial

env:
  _target_: xp_gym.environments.rideshare.XPRidesharePricingEnv
  n_cars: 300
  n_events: ${run.n_steps}   # reference run.n_steps
  price_per_distance_A: 0.01
  price_per_distance_B: 0.02

env_params:
  env_params:  # Nested structure for inner rideshare environment
    w_price: -0.3      # Price sensitivity (negative = higher prices reduce acceptance)
    w_eta: -0.005      # Wait time sensitivity (negative = longer waits reduce acceptance) 
    w_intercept: 4     # Base acceptance rate (high = customers generally accept rides)

design:
  _target_: xp_gym.designs.design.RideshareClusterDesign
  p: 0.5
  switch_every: 600

estimators:
  naive:
    _target_: xp_gym.estimators.naive.NaiveEstimator
  dm:
    _target_: xp_gym.estimators.dm.DMEstimator
  ht:
    _target_: xp_gym.estimators.ht.LimitedMemoryHTEstimator
    network: 
      _target_: xp_gym.estimators.network.RideshareNetwork
      max_spatial_distance: 2
      lookahead_steps: 600
    window_size: 2000
  dn:
    _target_: xp_gym.estimators.dn.LimitedMemoryDNEstimator
    network: 
      _target_: xp_gym.estimators.network.RideshareNetwork
      max_spatial_distance: 2
      lookahead_steps: 600
    window_size: 2000
  tpg:
    _target_: xp_gym.estimators.tpg.TPGEstimator
    k: 1
  sw_tpg:
    _target_: xp_gym.estimators.sw_tpg.SwitchbackTPGEstimator
    k: 1
    switch_every: ${design.switch_every}
